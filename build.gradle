import java.text.SimpleDateFormat
import java.util.Date

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.10.1'
        classpath 'io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.3.3'
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

def getCurrentTimestamp()
{
  Date today = new Date()
  SimpleDateFormat df = new SimpleDateFormat("MM-dd-HH-mm")
  return df.format(today)
}

bootJar {
    baseName = 'gs-rest-service'
    version =  getCurrentTimestamp()
}

repositories {
    jcenter {
        url "http://jcenter.bintray.com/"
    }
    //mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('mysql:mysql-connector-java:8.0.13')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.mongodb:mongo-java-driver:3.10.1')
    compile('io.springfox:springfox-swagger-ui:2.4.0')
    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('org.apache.httpcomponents:httpclient:4.5.3')
    compile('org.json:json:20180813')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

task buildDockerImage(type:Exec) {
    println "build dir:${buildDir}"
    workingDir "${buildDir}/libs/"
    commandLine 'docker', 'build', '--build-arg', 'JAR_FILE=/'+bootJar.baseName+'-'+bootJar.version+'.jar' , '-t='+bootJar.baseName+':'+bootJar.version, '-f', '../..//deployment/Dockerfile' , '.'
}
//================================ swagger ==============================================
// gradle clean asciidoctor
ext {
    asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
    swaggerOutputDir = file("${buildDir}/swagger")
    snippetsOutputDir = file("${buildDir}/asciidoc/snippets")
}
test {
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
    systemProperty 'io.springfox.staticdocs.snippetsOutputDir', snippetsOutputDir
}
convertSwagger2markup {
    dependsOn test
    swaggerInput "${swaggerOutputDir}/swagger.json"
    outputDir asciiDocOutputDir
    config = [
            'swagger2markup.pathsGroupedBy' : 'TAGS',
            'swagger2markup.extensions.springRestDocs.snippetBaseUri': snippetsOutputDir.getAbsolutePath()
 	]
}

asciidoctor {
    dependsOn convertSwagger2markup
    sourceDir asciiDocOutputDir
    backends = ['html5', 'pdf']
    attributes = [
            doctype: 'book',
            toc: 'left',
            toclevels: '3',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            generated: asciiDocOutputDir
    ]
}
//================================ swagger end ==============================================
